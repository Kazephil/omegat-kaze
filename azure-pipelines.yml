trigger:
  branches:
    include:
      - master
      - releases/*
      - refs/tags/v*
    exclude:
      - release/*
      - standard

pr:
  branches:
    include:
      - master
      - releases/*
    exclude:
      - standard
  paths:
    exclude:
      - docs
      - doc_src
      - docs_devel
      - README.md

variables:
  isMain: $[eq(variables['Build.SourceBranch'], 'refs/heads/master')]
  isRelease: $[contains(variables['Build.SourceBranch'], 'refs/tags/v')]
  isJRE8: $[contains(variables['Build.SourceBranch'], 'refs/tags/v5')]
  GRADLE_USER_HOME: '$(Pipeline.Workspace)/.gradle'

stages:
- stage: Check
  condition: ne(variables.isRelease, true)
  jobs:
  - job: GitHubCI
    displayName: CI Check for master, releases/* and Pull-Requests
    pool:
      vmImage: 'ubuntu-22.04'
    condition: ne(variables['Build.Reason'], 'Schedule')
    steps:
      - template: ci/azure-pipelines/check_steps.yml

# Release build will run on the main and/or release branch, except for Pull-Request
- stage: Release
  condition: eq(variables.isRelease, true)
  jobs:
  - job: ReleaseBuild
    pool:
      vmImage: 'ubuntu-22.04'
    steps:
      - script: |
          version=$(./gradlew -qq printVersion | head -n -1 )
          echo "##vso[task.setvariable variable=version]$version"
      - template: ci/azure-pipelines/build_steps.yml
      - template: ci/azure-pipelines/publish_release.yml
        parameters:
          omegatVersion: $(version)